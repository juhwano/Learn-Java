package day0118;
//자바의 여러가지 이름 짓는 규칙(Naming Convention)
//코딩을 하게 되면 여러 가지 존재에 대해 이름을 붙여주게 된다.
//이름 짓는 규칙을 안 지켜도 프로그램 실행에 문제가 없을 때가 많지만
//극단적으로 표현하면 이 규칙을 전세계 프로그래머들이 다 따르고 있다.

//공통 규칙
//1.특수문자 혹은 숫자로 시작할 수 없다.
//  반드시 알파벳으로 시작해야한다.
//2.숫자의 경우 어떤 숫자도 가능하지만 특수문자는 _만 사용가능하다.
//
//3.자바는 대소문자를 엄격하게 구분한다.
//  즉, 대소문자가 틀리면 다른 존재이다.
//4.한글로 이름을 지어줄 수 있지만, 절대로 하지말자
//5.자바에는 내부적으로 기능이 설정된 50여가지의 "예약어(KeyWord)"가 있다.
//  해당 단어들로는 우리가 이름을 지어줄 수 없기 때문에
//  여러분들은 그 50여가지를 외우셔야된다.
//  내일 11시에 시험보겠습니다.
//  https://en.wikipedia.org/wiki/List_of_Java_keywords
//  옛날 옛적 이야기.............................
//  이클립스로 대표되는 IDE가 나오기 전에는 우리가 이런 식으로 키워드를 외워야했다.
//  이클립스의 경우, 키워드를 자주색으로 표시해준다.
//  즉 public, class 등의 단어들은 자주색으로 표시되므로 키워드라는 것을 알 수 있다.
//  이름을 지었는데, 자주색으로 표시될 경우 이름에 변형을 가하거나 동의어를 사용하면 된다.

// 낙타등 표기법과 뱀 표기법
/* 1.낙타등 표기법( Camel back notation)
 * 낙타등 표기법이란 어떠한 것에 이름을 지어줄 때
 * 여러 단어로 이루어져 있을 경우,
 * 두번쨰 단어부터는 첫글자를 대문자로 적어줘서
 * 몇개의 단어로 이루어져있는지 쉽게 알려주는 표기법이다.
 * 예시 : userNumber, memberController, UserMemberAuthController
 * 낙타등처럼 꼬불랑꼬불랑 올라갓다가 내려갔다가
 * 
 * 2.뱀 표기법 ( Snake notation )
 * 뱀 표기법이란 어떠한 것에 이름을 지어줄때
 * 모든 글자를 대문자로 적어주고
 * 여러 단어일 경우 단어 사이마다 _ 를 넣어줘서 몇 개의 단어로 이루어져있는지
 * 쉽게 알려주는 표기법이다.
 * 예시 : UNIT_PRICE, MEMBER_PICTURE_ADDRESS
 * 
 * 여러 가지 개념들에 대한 이름짓는 규칙
 * 1.변수 : 낙타등 표기법을 사용, 소문자로 시작하는 명사 weight
 * 2.메소드 : 낙타등 표기법을 사용, 소문자로 시작하는 동사 scanner.close();
 *   또 메소드의 경우, 프로그래밍 구조상 반드시 맨 뒤에 ()가 붙는다. 
 * 3.상수 : 뱀 표기법을 사용하는 명사 MAX_WEIGHT
 * 4.클래스 : 낙타등 표기법을 사용, 대문자로 시작하는 명사
 */


public class Ex02Naming {

}
